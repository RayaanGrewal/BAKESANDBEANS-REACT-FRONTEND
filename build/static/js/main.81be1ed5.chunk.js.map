{"version":3,"sources":["assets/loading.svg","assets/burger.jpeg","assets/pizza.jpg","assets/salad.jpg","components/ContactModal.js","components/NavbarComponent.js","components/CarouselComponent.js","components/loadingComponent.js","components/Home.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactModal","useState","show","setShow","Fragment","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","style","color","fontStyle","Body","Row","Col","url","width","height","display","size","block","href","NavbarComponent","props","Navbar","collapseOnSelect","expand","bg","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","CarouselComponent","Carousel","margin","Item","src","require","alt","Caption","fontFamily","fontweight","Component","Loading","Home","state","loading","this","setState","Container","fluid","Breadcrumb","Jumbotron","marginBottom","marginTop","name","Menu","data","fetch","then","res","json","active","map","items","Card","key","pk","sm","itemName","nonVeg","Badge","Text","ingredients","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81be1ed5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.1a4b7842.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.1847ab3e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pizza.646e8872.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salad.af5cb8b1.jpg\";","import React , { useState }  from 'react';\nimport {Modal , Button  , Row , Col } from 'react-bootstrap';\nimport Iframe from 'react-iframe'\n\nfunction ContactModal() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outline-danger\" onClick={handleShow}>\n        Contact\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title><h1 style={{color :\"#2f3542\" , fontStyle: \"italic\"}}>Contact</h1></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Row>\n            <Col>\n        <Iframe url=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d13694.49746111733!2d75.8302206!3d30.8971676!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xc9b60e4df73ee4b7!2sBakes%20And%20Beans!5e0!3m2!1sen!2sin!4v1596018266314!5m2!1sen!2sin\"\n        width=\"150px\"\n        height=\"150px\"\n        display=\"initial\"/>\n        </Col>\n        <Col>\n          <h6>655,</h6>\n          <h6>Pakhowal Rd, </h6>\n          <h6>Gurdev Nagar,</h6>\n          <h6> Ludhiana,</h6>\n          <h6> Punjab 141001,</h6>\n          <h6> Contact: 01615017777 </h6>\n        </Col>\n      </Row>\n      <Button variant=\"outline-primary\" size=\"lg\" block>\n        <a href=\"tel:01615017777\">Call </a>\n      </Button>\n\n        </Modal.Body>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default ContactModal;\n","import React from 'react';\nimport { Navbar,Nav } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button';\nimport ContactModal from './ContactModal'\n\nfunction NavbarComponent(props){\n\n\n    return (\n      <React.Fragment>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\" >\n    <Navbar.Brand href=\"/\"  style={{color : \"#fff200\"}}> Bakes&Beans </Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/#section1\" ><Button variant=\"outline-danger\">About</Button></Nav.Link>\n\n        <Nav.Link><ContactModal/></Nav.Link>\n\n      </Nav>\n      <Nav>\n        <Nav.Link href=\"/menu\" ><Button variant=\"outline-success\">Menu</Button></Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n</React.Fragment>\n    );\n  }\n\n\nexport default NavbarComponent;\n","import React , { Component } from 'react';\nimport { Carousel } from 'react-bootstrap'\n\nclass CarouselComponent extends Component {\n  render()\n  {\n    return (\n      <Carousel style={{margin:0}}>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src={require(\"../assets/burger.jpeg\")}\n        alt=\"First slide\"\n      />\n      <Carousel.Caption>\n        <h3 style={{color :\"#2f3542\" , fontFamily: \"sans-serif\" , fontweight: \"bold\"}} >Burger</h3>\n      </Carousel.Caption>\n    </Carousel.Item>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src={require(\"../assets/pizza.jpg\")}\n        alt=\"Third slide\"\n      />\n\n      <Carousel.Caption>\n        <h3 style={{color :\"#2f3542\" , fontFamily: \"sans-serif\" , fontweight: \"bold\"}}>Pizza</h3>\n      </Carousel.Caption>\n    </Carousel.Item>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src={require(\"../assets/salad.jpg\")}\n        alt=\"Third slide\"\n      />\n\n      <Carousel.Caption>\n        <h3 style={{color :\"#2f3542\" , fontFamily: \"sans-serif\" , fontweight: \"bold\"}}>Nutritional salad</h3>\n      </Carousel.Caption>\n    </Carousel.Item>\n  </Carousel>\n    );\n  }\n}\n\nexport default CarouselComponent;\n","import React from 'react';\n\n\nconst Loading = () => {\n\n  return <div className=\"loader-container\"><div className=\"loader\"><img alt=\"loading\"src={require(\"../assets/loading.svg\")}/></div></div>\n    }\n\nexport default Loading\n","import React , { Component } from 'react';\nimport NavbarComponent from './NavbarComponent'\nimport { Breadcrumb , Jumbotron ,  Container} from 'react-bootstrap'\nimport CarouselComponent from './CarouselComponent.js'\nimport Loading from './loadingComponent'\n\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loading : false,\n\n    }\n  }\n  componentDidMount()\n  {\n    this.setState({loading : true})\n  }\n\n  render()\n  {\n    let {loading } = this.state;\n    if (!loading){\n      return <Loading/>\n    }\n    return (\n      <div >\n<NavbarComponent />\n<Container fluid>\n        <Breadcrumb>\n          <Breadcrumb.Item  href=\"/\" >\n              Home\n          </Breadcrumb.Item>\n          <Breadcrumb.Item href=\"/\" >\n          </Breadcrumb.Item>\n        </Breadcrumb>\n\n        <CarouselComponent/>\n\n        <Jumbotron fluid style={{ marginBottom:0}}>\n          <Container style={{marginBottom : 20 ,  marginTop : 0}}>\n\n          \n          <h1 style={{color :\"#2f3542\" , fontStyle: \"italic\"}}>About</h1>\n\t<a name=\"section1\" href=\"/#section1\">\n          <p>\n          Bakes & Beans is  one of the first stand alone coffee cafes in the country with its first branch that opened 20 years ago. It is the the brain child  of  Gurlal  Grewal , an industrialist   who set up    Upper India Steel .This cafe was not conceived as a business venture but from a passion to serve the best food in the best ambience .Cafes were a relatively brand new concept in the country at that time and this was one of the 1st cafes in Punjab.For more than 20 years Bakes & beans has been serving you impeccable quality of beverages and food .These 2 decades has been testimony to our strength of quality. Our sister concern Oliva ,the first  fine dining Italian restaurant in Punjab has been serving great quality for 20 years too..Gurlal Grewal introduced Italian cuisine  to Ludhiana and continue doing so to this day .His  motto is to get the best quality and the best taste on your plate or in that mug . The cost of making the food or the drink doesn’t matter as long as we are sure  it tastes great. That is our strength .That’s why our customers keep coming back for more and more. Come and taste the difference .\n\n          </p>\n</a>\n          </Container>\n        </Jumbotron>\n\n\n</Container>\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React , { Component } from 'react';\nimport NavbarComponent from './NavbarComponent'\nimport { Breadcrumb , Container , Card  , Badge , Row , Col} from 'react-bootstrap'\n\n\n\n\nclass Menu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loading : false,\n      data : []\n\n    }\n  }\n\n   componentDidMount()\n   {\n     fetch(\"https://bakes-and-beans-api.herokuapp.com/retrieve-item/\").then(res =>res.json()).then(json => {this.setState({loading : true,data : json})})\n   }\n\n\n  render()\n  {\n    let {loading , data} = this.state;\n    if (!loading){\n      return <div className=\"loader-container\"><div className=\"loader\"><img alt=\"loading\" src={require(\"../assets/loading.svg\")}/></div></div>\n    }\n    else{\n    return (\n      <div >\n      <NavbarComponent/>\n\n      <Breadcrumb>\n        <Breadcrumb.Item  href=\"/\">\n            Home\n        </Breadcrumb.Item>\n        <Breadcrumb.Item active href=\"/\">\n        Menu\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      <Container>\n\n      <div>\n      <ul>\n        {data.map(items => (\n\n\n          <Card style={{ margin : 10  }} key={items.pk}>\n  <Card.Body >\n\n  <Row>\n  <Col  sm={8}>\n    <Card.Title ><h1>{items.itemName}</h1></Card.Title>\n  </Col>\n    <Col sm={4}>{items.nonVeg ?\n    <Badge  variant=\"danger\">\n      <h6 style={{margin : 2}}>  Non Veg</h6>\n      </Badge> : <Badge variant=\"success\">\n          <h6 style={{margin : 2}}>Veg</h6>\n        </Badge>}\n      </Col>\n  </Row>\n\n  <Row>\n  <Col style={{marginTop : 25}}>\n    <Card.Text style={{fontStyle : \"italic\"}}>\n      {items.ingredients}\n    </Card.Text>\n  </Col>\n  </Row>\n\n  </Card.Body>\n</Card>\n\n\n        ))}\n      </ul>\n      </div>\n\n\n        </Container>\n      </div>\n    );}\n  }\n}\n\nexport default Menu;\n","import React , { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter , Route , Switch} from 'react-router-dom'\n\nimport Home from './components/Home'\nimport Menu from './components/Menu'\n\n\nclass App extends Component {\n  render()\n  {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/menu\" exact component={Menu}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}